/*
* Package:
* j2crypt-js.js @ 1.3 by Tomas Molinari @toomeenoo <tomie.molinari@gmail.com>
* jquery.binarytransport.js @ 1.0 by Henry Algus <henryalgus@gmail.com>
*/
function J2crypt(){return this.map={width:1,height:1,data:[0]},this.password="0",this.passwordSize=1,this}!function(t,r){"use strict";t.ajaxTransport("+binary",function(t,r,a){if(window.FormData&&(t.dataType&&"binary"==t.dataType||t.data&&(window.ArrayBuffer&&t.data instanceof ArrayBuffer||window.Blob&&t.data instanceof Blob)))return{send:function(r,a){var e=new XMLHttpRequest,n=t.url,s=t.type,o=t.async||!0,i=t.responseType||"blob",p=t.data||null,u=t.username||null,d=t.password||null;e.addEventListener("load",function(){var r={};r[t.dataType]=e.response,a(e.status,e.statusText,r,e.getAllResponseHeaders())}),e.addEventListener("error",function(){var r={};r[t.dataType]=e.response,a(e.status,e.statusText,r,e.getAllResponseHeaders())}),e.open(s,n,o,u,d);for(var c in r)e.setRequestHeader(c,r[c]);e.responseType=i,e.send(p)},abort:function(){}}})}(window.jQuery),J2crypt.prototype.setPwd=function(t){return this.password=t,this.passwordSize=t.length,this.precomputed=!1,this},J2crypt.prototype.setMapJson=function(t){this.map=JSON.parse(crypto_map),this.map.data=[];for(var r=0;r<this.map.dataHex.length;)this.map.data.push(parseInt(this.map.dataHex.substr(r,2),16)),r+=2;return delete this.map.dataHex,this},J2crypt.prototype.post=function(t,r,a){var e=this;window.jQuery.post(t,r,function(t){e.unlock(t,a)},"binary")},J2crypt.prototype.get=function(t,r,a,e){var n=this;window.jQuery.get(t,r,function(t){n.unlock(t,a)},"binary")},J2crypt.prototype.unlock=function(t,r){var a=this,e=new FileReader;e.onload=function(t){var e="";Array.prototype.map.call(new Uint8Array(t.target.result),function(t){e+=("00000000"+parseInt(t).toString(2)).substr(-8)});for(var n=[];e.length>=7;)n.push(parseInt("00"+e.substr(0,7),2)),e=e.substr(7);r(a.array7unlock(n))},e.readAsArrayBuffer(t)},J2crypt.prototype.array7unlock=function(t){for(var r=0,a=0,e=0,n=t[0],s=(t[1],t[2]),o="",i=t.length;r+3<i;){for(e=0;r+3<i&&e<n;){for(var p=e%this.map.width,u=a%this.map.height,d=this.map.data[p+u*this.map.width],c=this.password.charCodeAt((r+s)%this.passwordSize),h=128;d+c>h;)h+=128;o+=String.fromCharCode((h-(d+c)+t[r+3])%128),e++,r++}a++}return o};